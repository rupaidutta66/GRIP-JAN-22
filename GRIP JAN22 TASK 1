{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"GRIP JAN22 TASK 1","provenance":[],"authorship_tag":"ABX9TyOoov6OgHIuWBVvi32BLwnE"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#**Data Science and business Analytics Intern At Spark Foundation**\n","#GRIPJAN22\n","\n","1.   Task 1: Prediction Using Supervised ML\n","2.   To Predict the percentage of marks of the students based on the number of hours they studied\n","\n","*Data found at: http://bit.ly/w-data*\n","\n","**Author: Subham Dutta**\n","---\n","\n","\n","\n","\n"],"metadata":{"id":"WDqdMBVOoRNX"}},{"cell_type":"markdown","source":["**Importing Required Libraries**"],"metadata":{"id":"-f5xdXs1-g0y"}},{"cell_type":"code","execution_count":138,"metadata":{"id":"NiOtIWjd-MJ2","executionInfo":{"status":"ok","timestamp":1642536947206,"user_tz":-330,"elapsed":417,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LinearRegression"]},{"cell_type":"markdown","source":["**Reading Data from Source**"],"metadata":{"id":"haHgesvdD1YD"}},{"cell_type":"code","source":["url = 'https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv'\n","stud_score = pd.read_csv(url)\n","stud_score"],"metadata":{"id":"HTL6lFIWDrR1","colab":{"base_uri":"https://localhost:8080/","height":833},"executionInfo":{"status":"ok","timestamp":1642536948720,"user_tz":-330,"elapsed":1043,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"968c19da-0892-4b78-f755-856828cd1f77"},"execution_count":139,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-cf83c97e-589a-4894-aa6c-ee3fc4ab5059\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Hours</th>\n","      <th>Scores</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2.5</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.1</td>\n","      <td>47</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.2</td>\n","      <td>27</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>8.5</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3.5</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1.5</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>9.2</td>\n","      <td>88</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>5.5</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>8.3</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2.7</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>7.7</td>\n","      <td>85</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>5.9</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>4.5</td>\n","      <td>41</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>3.3</td>\n","      <td>42</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>1.1</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>8.9</td>\n","      <td>95</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2.5</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>1.9</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>6.1</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>7.4</td>\n","      <td>69</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2.7</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>4.8</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>3.8</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>6.9</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>7.8</td>\n","      <td>86</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf83c97e-589a-4894-aa6c-ee3fc4ab5059')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cf83c97e-589a-4894-aa6c-ee3fc4ab5059 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cf83c97e-589a-4894-aa6c-ee3fc4ab5059');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["    Hours  Scores\n","0     2.5      21\n","1     5.1      47\n","2     3.2      27\n","3     8.5      75\n","4     3.5      30\n","5     1.5      20\n","6     9.2      88\n","7     5.5      60\n","8     8.3      81\n","9     2.7      25\n","10    7.7      85\n","11    5.9      62\n","12    4.5      41\n","13    3.3      42\n","14    1.1      17\n","15    8.9      95\n","16    2.5      30\n","17    1.9      24\n","18    6.1      67\n","19    7.4      69\n","20    2.7      30\n","21    4.8      54\n","22    3.8      35\n","23    6.9      76\n","24    7.8      86"]},"metadata":{},"execution_count":139}]},{"cell_type":"markdown","source":["**Ploting the distribution of scores**"],"metadata":{"id":"3RzE63fimDLO"}},{"cell_type":"code","source":["\n","stud_score.plot(x='Hours', y='Scores', figsize=(12,7), style='o')\n","plt.title('Hours vs Percentage')\n","plt.xlabel('Hours Studied')\n","plt.ylabel('Percentage Score')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"2mXL0rT7l4Nj","executionInfo":{"status":"ok","timestamp":1642536948721,"user_tz":-330,"elapsed":40,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"fcb1317f-d00b-40b2-f121-2230a4efcf70"},"execution_count":140,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 864x504 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["**Splitting the Model**"],"metadata":{"id":"dA2XSSMIyBD2"}},{"cell_type":"code","source":["X = stud_score['Hours']\n","Y = stud_score['Scores']"],"metadata":{"id":"ZdYc3k6vSOEQ","executionInfo":{"status":"ok","timestamp":1642536948722,"user_tz":-330,"elapsed":35,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}}},"execution_count":141,"outputs":[]},{"cell_type":"code","source":["X_reshape = X.values.reshape(-1, 1)  # values converts it into a numpy array\n","Y_reshape = Y.values.reshape(-1, 1)  # -1 means that calculate the dimension of rows, but have 1 column\n","\n","\n","train_X_reshape, test_X_reshape, train_Y_reshape, test_Y_reshape = train_test_split(X_reshape, Y_reshape, test_size=0.2, random_state=0) \n","\n"],"metadata":{"id":"N_EvNzZfroAK","executionInfo":{"status":"ok","timestamp":1642536948722,"user_tz":-330,"elapsed":32,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}}},"execution_count":142,"outputs":[]},{"cell_type":"code","source":["train_X_reshape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bmts7byUWjXb","executionInfo":{"status":"ok","timestamp":1642536948723,"user_tz":-330,"elapsed":32,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"4c4e021e-c32e-4f75-a7a6-e9396eca48f5"},"execution_count":143,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[3.8],\n","       [1.9],\n","       [7.8],\n","       [6.9],\n","       [1.1],\n","       [5.1],\n","       [7.7],\n","       [3.3],\n","       [8.3],\n","       [9.2],\n","       [6.1],\n","       [3.5],\n","       [2.7],\n","       [5.5],\n","       [2.7],\n","       [8.5],\n","       [2.5],\n","       [4.8],\n","       [8.9],\n","       [4.5]])"]},"metadata":{},"execution_count":143}]},{"cell_type":"markdown","source":["**Create and train LinearRegression Model**"],"metadata":{"id":"6OZdnYI5yH5e"}},{"cell_type":"code","source":["linear_regressor = LinearRegression()  # create object for the class\n","linear_regressor.fit(train_X_reshape, train_Y_reshape)  # perform linear regression"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PkSgeO77yQO0","executionInfo":{"status":"ok","timestamp":1642536948724,"user_tz":-330,"elapsed":27,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"968a2ca6-b0c9-4068-abdb-d802389758ec"},"execution_count":144,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":144}]},{"cell_type":"markdown","source":["**Predict the Model based on Testing Data**"],"metadata":{"id":"8XdNYeMuUwx_"}},{"cell_type":"code","source":["Y_pred = linear_regressor.predict(test_X_reshape) #plotting regression line"],"metadata":{"id":"EpqNReaNyR4p","executionInfo":{"status":"ok","timestamp":1642536948724,"user_tz":-330,"elapsed":23,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}}},"execution_count":145,"outputs":[]},{"cell_type":"code","source":["Y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RMPdRtOFzVYu","executionInfo":{"status":"ok","timestamp":1642536948725,"user_tz":-330,"elapsed":23,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"ff81e5cf-d407-47f8-85f7-23904c2ac92e"},"execution_count":146,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[16.88414476],\n","       [33.73226078],\n","       [75.357018  ],\n","       [26.79480124],\n","       [60.49103328]])"]},"metadata":{},"execution_count":146}]},{"cell_type":"code","source":["test_Y_reshape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wfWgua8sfZ7e","executionInfo":{"status":"ok","timestamp":1642536948725,"user_tz":-330,"elapsed":20,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"49be0c1b-267f-4d5c-9f22-83709f47a7bd"},"execution_count":147,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[20],\n","       [27],\n","       [69],\n","       [30],\n","       [62]])"]},"metadata":{},"execution_count":147}]},{"cell_type":"markdown","source":["**Plotting the Regression line**"],"metadata":{"id":"1KxJWe8wYAK-"}},{"cell_type":"code","source":["line = linear_regressor.coef_*X_reshape +linear_regressor.intercept_\n","plt.figure(figsize=(12,7))\n","plt.scatter(X_reshape,Y_reshape)\n","plt.plot(X_reshape, line, color='red')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"xm2SIA1jyrJ6","executionInfo":{"status":"ok","timestamp":1642536948727,"user_tz":-330,"elapsed":20,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"b203f691-d2a3-4941-d71c-f38ffb5e7d67"},"execution_count":148,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 864x504 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["**Comparing Actual with Predicted**"],"metadata":{"id":"t0vSwQG-dbtk"}},{"cell_type":"code","source":["df = pd.DataFrame({'Actual':test_Y_reshape[:,0], 'Predicted':Y_pred[:,0]})\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"yQEbL3kWzNhV","executionInfo":{"status":"ok","timestamp":1642536948728,"user_tz":-330,"elapsed":20,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"100feaae-3b52-4844-d0b6-b7156fa78316"},"execution_count":149,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-b624d47a-de04-4967-bec1-060d13608e31\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Actual</th>\n","      <th>Predicted</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>20</td>\n","      <td>16.884145</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>27</td>\n","      <td>33.732261</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>69</td>\n","      <td>75.357018</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30</td>\n","      <td>26.794801</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>62</td>\n","      <td>60.491033</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b624d47a-de04-4967-bec1-060d13608e31')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b624d47a-de04-4967-bec1-060d13608e31 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b624d47a-de04-4967-bec1-060d13608e31');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   Actual  Predicted\n","0      20  16.884145\n","1      27  33.732261\n","2      69  75.357018\n","3      30  26.794801\n","4      62  60.491033"]},"metadata":{},"execution_count":149}]},{"cell_type":"code","source":["df.plot(kind='bar',figsize=(12,7))\n","plt.show()\n","print('\\n')\n","print(\"Training Score:\",linear_regressor.score(train_X_reshape, train_Y_reshape))\n","print(\"Testing Score:\",linear_regressor.score(test_X_reshape, test_Y_reshape))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":494},"id":"Gl0-ar3OfN41","executionInfo":{"status":"ok","timestamp":1642536949687,"user_tz":-330,"elapsed":977,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"2c863bde-c0b1-42a2-bc2f-9acf0fb9d993"},"execution_count":150,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 864x504 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","\n","Training Score: 0.9515510725211552\n","Testing Score: 0.9454906892105354\n"]}]},{"cell_type":"markdown","source":["**Testing the Model with own Model**"],"metadata":{"id":"iF5QWnJfkLNh"}},{"cell_type":"code","source":["hours = 9.25\n","test = np.array([hours]).reshape(-1,1)\n","result = linear_regressor.predict(test)\n","print(\"If the student studied for {}hours, predicted score he will get {}\".format(hours,result))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZhpCugwxgrlz","executionInfo":{"status":"ok","timestamp":1642536949688,"user_tz":-330,"elapsed":25,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"7c846209-58b4-41c2-c6a5-3a268f444756"},"execution_count":151,"outputs":[{"output_type":"stream","name":"stdout","text":["If the student studied for 9.25hours, predicted score he will get [[93.69173249]]\n"]}]},{"cell_type":"markdown","source":["**Evaluating the model**"],"metadata":{"id":"pE0tXnnzml8r"}},{"cell_type":"code","source":["from sklearn import metrics  \n","print('Mean Absolute Error:', metrics.mean_absolute_error(test_Y_reshape, Y_pred)) \n","print('Mean Squared Error:', metrics.mean_squared_error(test_Y_reshape, Y_pred)) \n","print('Root Mean Absolute Error:', np.sqrt(metrics.mean_absolute_error(test_Y_reshape, Y_pred)))\n","print('R-2 Score:', metrics.r2_score(test_Y_reshape, Y_pred),'\\n')\n","score=metrics.r2_score(test_Y_reshape, Y_pred)*100\n","print('The Accuracy of the Model is',score,'%')  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fWQQmLfWl9Ad","executionInfo":{"status":"ok","timestamp":1642536949689,"user_tz":-330,"elapsed":18,"user":{"displayName":"the_ lapiDator","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"07615785013758748452"}},"outputId":"e5dc7217-3157-4d75-caff-e680a467599c"},"execution_count":152,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error: 4.183859899002982\n","Mean Squared Error: 21.598769307217456\n","Root Mean Absolute Error: 2.0454485813637513\n","R-2 Score: 0.9454906892105354 \n","\n","The Accuracy of the Model is 94.54906892105353 %\n"]}]}]}